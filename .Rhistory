View(cherry)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv",
col_names = FALSE, col_types = cols(`5` = col_integer()))
View(cherry)
head(cherry)
plot(cherry)
summary(cherry)
cherry[,1]
mean(cherry)
a=mean(cherry[,1])
cherry[,1]
cherry[,1]''
cherry[,1]^-1
rm(a)
cherry
c(1,23)
a=c(cherr[,1])
a=c(cherry[,1])
a
View(cherry)
View(cherry)
mean(c(cherry[,1]))
mean(a)
a
cherry
View(cherry)
rm(a)
cherry1 <- read.csv(file.choose(), dec=’,’, sep=’;’)
cherry1 = read.csv(file.choose(), dec=’,’, sep=’;’)
cherry1 = read.csv(file.choose(), dec=’,’, sep=’;’)
cherry = read.csv(file.choose(), dec=’,’, sep=’;’)
cherry = read.csv(file.choose(), dec=",", sep=";")
View(cherry)
View(cherry)
View(cherry)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv")
View(cherry)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv",
col_names = FALSE)
View(cherry)
summary(cherry)
a=cherry[,1]
mean(a)
a
View(a)
rm(cherry)
rm(a)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv",
col_names = FALSE)
View(cherry)
matrix(cherry)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv",
col_names = FALSE, skip = 1)
View(cherry)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv",
col_names = FALSE)
View(cherry)
View(cherry)
View(cherry)
cherry
print(cherry)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv",
col_names = FALSE)
View(cherry)
matrix(2, 3, 4; 3, 4,5)
matrix(data=c(4,6,7,8,9,10), ncol=3)
A=matrix(data=c(4,6,7,8,9,10), ncol=3)
MyData <- read.csv(choose.file(), header=TRUE, sep=",")
MyData <- read.csv(file.choose(), header=TRUE, sep=",")
MyData <- read.csv(file.choose(), header=FALSE, sep=",")
View(MyData)
MyData
a=MyData[,1]
a
mean(a)
read.csv(file.choose(header=FALSE, sep=","))
read.csv(file.choose(),header=FALSE, sep=",")
cherry=read.csv(file.choose(),header=FALSE, sep=",")
cherry
?read.csv
a=mean(cherry[,1])
b=mean(cherry[,2])
c=mean(cherry[,3])
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
length(cherry([1,]))
length(cherry(1,))
length(cherry[1,])
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
c=seq()
c
seq()
?seq
c()
cherry=read.csv(file.choose(), header=FALSE, sep=",")
source('~/.active-rstudio-document')
mean(cherry[,1])
i+
1
2
3
r
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls())
cherry=read.csv(file.choose(), header=FALSE, sep=",")
a=c()
for (i in 1:length(cherry[1,]))
{
a[i]=mean(cherry[,i])
}
print(a)
cherry[2:3, 1:3]
cherry
source('~/.active-rstudio-document')
matrix()
c()
a=matrix()
a
rm(list=ls())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
max(cherry(,1))
max(cherry[,1])
source('~/.active-rstudio-document')
rm(list=ls())
cherry=read.csv(file.choose(), header=FALSE, sep",")
cherry=read.csv(file.choose(), header=FALSE, sep ",")
cherry=read.csv(file.choose(), header=FALSE, sep=",")
View(cherry)
head(cherry)
cherry
plot(cherry)
summary(cherry)
Girth
hist(Girth)
cherry$Girth
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
rownames(cherry)=c("Mean", "Max", "Min")
rownames(A)=c("Mean", "Max", "Min")
A
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
Girth
hist(Girth)
cherry$Girth
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
cherry$Girth
mean(cherry$Girth)
A
hist(cherry$Girth)
with(cherry, hist(Height))
with(cherry, mean(Height))
attach(cherry)
Girth
Heaight
Height
Volume
mean(Girth)
hist(Girth)
plot(Height, Volume)
detach(cherry)
Girth
cherry1=transform(cherry, logVolume=log(Volume), logGirth=log(Girth))
cherry1
head(cherry1)
hist(cherry1$logVolume)
cherry[3,]
cherry[3:5, ]
cherry
rm(cherry1)
cerry
cherry
subset(cherry, Height>70)
subset(cherry, Height>=70)
subset(cherry, Height==70)
subset(cherry, Height>20)
subset(cherry, Height>=20)
subset(cherry, Height==20)
subset(cherry, Height==37, select=c(Girth, Volume))
subset(cherry, Height>20 & Girth>5
subset(cherry, Height>20 & Girth>5)
subset(cherry, Height>20 & Girth>5)
subset(cherry, Height>20 | Girth>5)
View(A)
View(cherry)
Tab=A
rm(a)
rm(A)
newData=data.frame(Girth=c(11.5, 17.9), Height=c(71, 75), Volume=c(22, 40))
newData
allData=rbind(cherry, newData)
allData
precipitation=rnorm(n=31, mean=50, sd=10)
precipitation
allData2=cbind(cherry, precipitation)
allData2
plot(cherry)
plot(Girth, Volume)
attach(cherry)
plot(Girth, Volume)
plot(log(Girth), log(Volume))
plot(Height)
hist(Volume)
boxplot(Volume)
detach(cherry)
temp=c(65.5, 79.1, 83.9, 84.0, 76.9)
barplot(temp, names=5:9)
read.csv(file.choose(), header=FALSE, sep=",")
NYtemp=read.csv(file.choose(), header=FALSE, sep=",")
data.frame=(Month=NYtemp[,1], Day=NYtemp[,2], Temp=[,3])
data.frame=(Month=NYtemp[,1] Day=NYtemp[,2] Temp=[,3])
NYtemp=read.csv(file.choose(), header=FALSE, sep=",")
View(allData)
NYtemp=read.csv(file.choose(), header=FALSE, sep=",")
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv")
View(cherry)
library(readr)
cherry <- read_csv("~/Desktop/Prove_R/cherry.csv",
col_names = FALSE)
View(cherry)
source('~/Desktop/Prove_R/cherry_mean_max_min.R')
View(cherry)
View(cherry)
View(A)
read.csv(file.choose(), header=FALSE, sep=",")
NYtemp=read.csv(file.choose(), header=FALSE, sep=",")
View(NYtemp)
NYtemp=read.csv(file.choose(), header=FALSE, sep=",")
NYtemp=data.frame(Month=NYtemp[,1], Day=NYtemp[,2], Temo=NYtemp[,3])
View(NYtemp)
NYtemp=data.frame(Month=NYtemp[,1], Day=NYtemp[,2], temp=NYtemp[,3])
NYtemp=data.frame(Month=NYtemp[,1], Day=NYtemp[,2], Temp=NYtemp[,3])
View(NYtemp)
attach(Julay)
attach(July)
attach(Month)
NYtemp
attach(Month)
July=subset(NYtemp[1:31, 1:3])
July
August=subset(NYtemp[32:62, 1:3])
August
attach(July)
plot(Day, Temp)
plot(Day, Temp, pch=16)
plot(Day, Temp, pch=2)
plot(Day, Temp, type="l")
plot(Day, Temp, type="b")
plot(Day, Temp, type="l", lty=2)
plot(Day, Temp, type="l", lwd=2)
plot(Day, Temp, type="l", col="blue")
plot(Day, Temp, type="l", xlab="Day in month", ylab="Temperature (F)")
plot(Day, Temp, type="l", xlab="Day in month", ylab="Temperature (F)", main="Temperature in NY")
plot(Day, Temp, type="l", cex.lab=1.3)
plot(Day, Temp, type="l", cex.axis=1.3)
plot(Day, Temp, type="l", xlim=c(0,40), ylim=c(50,100))
detach(July)
range(July$Temp)
range(August$Temp)
plot(July$Day, July$Temp, type="l", ylim=c(70,100))
plot(August$Day, August$Temo, col="red")
plot(August$Day, August$Temp, col="red")
lines(August$Day, August$Temp, col="green")
lines(August$Day, August$Temp, col="green")
plot.new()
??lines
rm(list = ls())
?input
??input
num=readline("input")
num=readline("input: ")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?print
?readline
?as.string
?string
source('~/.active-rstudio-document')
stats
source('~/.active-rstudio-document')
stats[1,1]
stats
source('~/.active-rstudio-document')
stats
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
stats
source('~/.active-rstudio-document')
stats
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
names(stats)=c(readline("Quali statistiche vogliono essere calcolate: ")
'uno', 'due'
source('~/.active-rstudio-document')
"print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
names(stats)=c(readline("Quali statistiche vogliono essere calcolate: ")
a
source('~/.active-rstudio-document')
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=c()
names(stats)=c(readline("Quali statistiche vogliono essere calcolate: ")
"mean", "sum"
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=c()
names(stats)=c(readline(Quali statistiche vogliono essere calcolate: )
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=c()
names(stats)=c(readline("Quali statistiche vogliono essere calcolate: ")
mean sum
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=c()
stats=c(readline("Quali statistiche vogliono essere calcolate: ")
"a", "b"
stats=c(readline("Quali statistiche vogliono essere calcolate: ")
a b
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=c()
stats=c(readline("Quali statistiche vogliono essere calcolate: ")
a b
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
#stats=c()
stats=(readline("Quali statistiche vogliono essere calcolate: ")
a b
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
#stats=c()
stats=readline("Quali statistiche vogliono essere calcolate: ")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
#stats=c()
stats=readline("Quali statistiche vogliono essere calcolate: ")
source('~/.active-rstudio-document')
stats
source('~/.active-rstudio-document')
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=readline(prompt="Quali statistiche vogliono essere calcolate: ")
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=readline(prompt="Quali statistiche vogliono essere calcolate: ")
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat=read.csv(file.choose(), header=FALSE, sep=",")
stats=readline("Quali statistiche vogliono essere calcolate: ")
stats
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat = read.csv(file.choose(), header=FALSE, sep=",")
prompt1 = "enter the variable_name \n"
var = as.character((readline(prompt1))[[1]])
print("Il file di cui si vogliono calcolare le statistiche deve essere in formato .csv")
Mat = read.csv(file.choose(), header=FALSE, sep=",")
prompt1 = "enter the variable_name \n"
var = as.character((readline(prompt1))[[1]])
c("a","a")
A=c("a","a")
A[1,1]
A(1,1)
A[1,1]
A
A[1:2]
A[1:1]
A=readline("stats: ")
A
A=readline(prompt = "stats: ")
A=readline(prompt = "stats: ")
A=readline(prompt = "stats: ")
A=c(readline(prompt = "stats: "))
limStr <- readline("Enter the vector you want:");
limStr <- readline("Enter the vector you want:");
limStr <- readline("Enter the vector you want:");
lim <- as.numeric(unlist(strsplit(limStr, ",")));
limStr <- readline("Enter the vector you want:");
lim <- as.numeric(unlist(strsplit(limStr, ",")));
source('~/.active-rstudio-document')
x=scan()
x=scan()
source('~/.active-rstudio-document')
?character
?scan
scan(text)
scan(text)
x=scan(text)
x=scan()
??input
x=readline("vector: ")
?chr
A=c("a","b")
A[1]
A[2]
readline()
A=readline()
A=c(readline())
A=c()
A=c(readline())
A=[1,2,3]
A=c(1,2,3)
A[1]="mean"
A[2]="sum"
A[3]="max"
#Caricare il file di cui si vogliono calcolare le stistiche in formato .csv
stats=read.csv(file.choose(), header=FALSE, sep=",")
print("Scegliere il numero di statisiche da calcolare: ")
n=scan()
#Caricare il file di cui si vogliono calcolare le stistiche in formato .csv
values=read.csv(file.choose(), header=FALSE, sep=",")
print("Scegliere il numero di statisiche da calcolare: ")
n=scan()
statstype=c()
for (i 1:n)
{
c[i]=readline("Stats: ")
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
#Caricare il file di cui si vogliono calcolare le stistiche in formato .csv
values=read.csv(file.choose(), header=FALSE, sep=",")
stats=seq(from=1, to=5)
#1=mean; 2=max; 3=min; 4=sd; 5=median
stats[1]="mean"
stats[2]="max"
stats[3]="min"
stats[4]="sd"
stats[5]="median"
statsvalue=c()
for (i in 1:length(stats)) {
for  (j in 1:lenght(values[1,])) {
statsvalue[i,j]=stats(i)(values(,j))
}
}
source('~/.active-rstudio-document')
stats
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
stats(1)(c(1, 2, 3, 4, 5))
stats[1](c(1, 2, 3, 4, 5))
stats[1]
stats=seq(from=1, to=5)
#1=mean; 2=max; 3=min; 4=sd; 5=median
stats[1]=mean
stats[2]=max
stats[3]=min
stats[4]=sd
stats[5]=median
#Caricare il file di cui si vogliono calcolare le stistiche in formato .csv
values=read.csv(file.choose(), header=FALSE, sep=",")
stats=seq(from=1, to=5)
#1=mean; 2=max; 3=min; 4=sd; 5=median
stats[1]==mean
stats[2]==max
stats[3]==min
stats[4]==sd
stats[5]==median
statsvalue=c()
for (i in 1:length(stats)) {
for  (j in 1:length(values[1,])) {
statsvalue[i,j]=(stats[i])(values[,j])
}}
stats
stats[1]="mean"
stats[2]="max"
stats[3]="min"
stats[4]="sd"
stats[5]="median"
stats
A=c(1,2,3,4,5)
mean(A)
stats(1)(A)
stats(1)
stats[1](A)
A=c[mean, sum,]
A=c[mean, sum]
A=c(mean, sum)
A
A(1)
A[1]
a=c(1,2,3,4,5)
A[1](a)
